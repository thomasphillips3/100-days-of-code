{"type":"PR","pr":{"number":7,"head":"4503b149bd7f6ad25ac60811bde6827523482f8a"},"user":"thomas.phillips.3","status":"pending_publish","branch":"cms/day-102-espresso-testing-react-native","collection":"code","title":"Day 102: Espresso Testing React Native","description":"## Today's Progress\n\nCreated a few more automated tests. Refactored \n\n## Thoughts\n\nThere was a brief little aside on Static Imports that made me understand it better. I usually let my IDE decide how to import my dependencies, but this was really helpful:\n\n> By adding the **`org.mockito.Mockito.*;`** static import, you can use methods like **`mock()`** directly in your tests. Static imports allow you to call static members, i.e., methods and fields of a class directly without specifying the class.\n>\n> Using static imports greatly improves the readability of your test code, you should use it.\n\nI also found that as I'm adding new features, I have the urge (and sometimes necessity) to refactor code to accommodate the changes.\n\n## Relevant Links\n\n* [Unit tests with Mockito - Tutorial](http://www.vogella.com/tutorials/Mockito/article.html)\n* [ViewMatchers](https://developer.android.com/reference/android/support/test/espresso/matcher/ViewMatchers.html)","objects":{"entry":{"path":"data/days/day-102-espresso-testing-react-native.toml","sha":"7a0421202afca43e34a7405538e43d4238eb9c9b"},"files":[]},"timeStamp":"2018-03-28T07:02:59.197Z"}